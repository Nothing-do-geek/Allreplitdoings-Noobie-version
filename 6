"""
Номер 1
Повтори 3[Налево 90 Вперёд 10]
Определите, сколько точек с целочисленными координатами будут находиться на линии, построенной Черепахой.
"""
# import turtle as t

# t.tracer(0)
# t.screensize(3500, 3500, "white")
# t.left(90)
# t.speed(300)
# scale = 10
# for k in range(3):
#   t.left(90)
#   t.forward(10 * scale)
# t.up()
# for x in range(-10, 50):  #x = координата по оси х
#   for y in range(-10, 10):  #y - координата по оси y
#     t.goto(x * scale, y * scale)
#     t.dot(2)
# t.done()
"""
Номер 2
Повтори 6 [Налево 90 Вперёд 4]
Определите, сколько точек с целочисленными координатами будут находиться на границе фигуры, построенной Черепахой.
"""
# import turtle as t

# t.tracer(0)
# t.screensize(3500, 3500, "white")
# t.left(90)
# t.speed(300)
# scale = 10
# for k in range(6):
#   t.left(90)
#   t.forward(4 * scale)
# t.up()
# for x in range(-5, 50):  #x = координата по оси х
#   for y in range(-5, 30):  #y - координата по оси y
#     t.goto(x * scale, y * scale)
#     t.dot(2)
# t.done()
"""
Номер 3
Повтори 5 [Вперёд 3 Направо 90 Вперёд 7 Направо 90]
Определите, сколько точек с целочисленными координатами будут находиться внутри внешнего контура нарисованной фигуры. Точки на внешнем контуре учитывать не следует.
"""
# import turtle as t
#
# t.tracer(0)
# t.screensize(3500, 3500, "white")
# t.left(90)
# t.speed(300)
# scale = 3
# for k in range(5):
#   t.forward(3 * scale)
#   t.right(90)
#   t.forward(7 * scale)
#   t.right(90)
# t.up()
# for x in range(-5, 50):  #x = координата по оси х
#   for y in range(-1, 30):  #y - координата по оси y
#     t.goto(x * scale, y * scale)
#     t.dot(2)
# t.done()
"""
Номер 4
Повтори 2 [ Направо 90 Повтори 4 [ Вперёд 5 Направо 90]]
Определите, сколько точек с целочисленными координатами будут находиться внутри внешнего контура нарисованной фигуры. Точки на внешнем контуре учитывать следует.
"""
# import turtle as t
#
# t.tracer(0)
# t.screensize(3500, 3500, "white")
# t.left(90)
# t.speed(300)
# scale = 3
# for k in range(2):
#   t.right(90)
#   for k in range(4):
#       t.forward(5 * scale)
#       t.right(90)
# t.up()
# for x in range(-5, 50):  #x = координата по оси х
#   for y in range(-1, 30):  #y - координата по оси y
#     t.goto(x * scale, y * scale)
#     t.dot(2)
# t.done()
"""
Номер 5
Повтори 2[Направо 90 Повтори 4 [ Вперёд 5 Направо 90] Вперёд 4]
Определите, сколько точек с целочисленными координатами будут находиться внутри внешнего контура нарисованной фигуры. Точки на внешнем контуре учитывать следует.
"""
# import turtle as t
#
# t.tracer(0)
# t.screensize(3500, 3500, "white")
# t.left(90)
# t.speed(300)
# scale = 3
# for k in range(2):
#   t.right(90)
#   for k in range(4):
#       t.forward(5 * scale)
#       t.right(90)
#   t.forward(4 * scale)
# t.up()
# for x in range(-5, 50):  #x = координата по оси х
#   for y in range(-1, 30):  #y - координата по оси y
#     t.goto(x * scale, y * scale)
#     t.dot(2)
# t.done()
"""
Номер 6
Повтори 4 [Вперёд 3 Направо 90 Вперёд 3 Налево 90 Вперёд 3 Направо 90]
Определите, сколько точек с целочисленными координатами будут находиться внутри внешнего контура нарисованной фигуры. Точки на внешнем контуре учитывать не следует.
"""
# import turtle as t
#
# t.tracer(0)
# t.screensize(3500, 3500, "white")
# t.left(90)
# t.speed(300)
# scale = 10
# for k in range(4):
#   t.forward(3 * scale)
#   t.right(90)
#   t.forward(3 * scale)
#   t.left(90)
#   t.forward(3 * scale)
#   t.right(90)
# t.up()
# for x in range(-5, 50):  #x = координата по оси х
#   for y in range(-5, 30):  #y - координата по оси y
#     t.goto(x * scale, y * scale)
#     t.dot(2)
# t.done()
"""
Номер 7

Повтори 4 [Вперёд 3 Направо 90 Вперёд Х]
Определите, при каком наименьшем натуральном Х количество точек с целочисленными координатами внутри области, ограниченной линией, полученной при выполнении данной программы, окажется больше 120. Точки, расположенные на линии, следует учитывать.
"""
# import turtle as t
#
# t.tracer(0)
# t.screensize(3500, 3500, "white")
# t.left(90)
# t.speed(300)
# scale = 3
# for X in range(1,1000):
#   for k in range(4):
#     t.forward(3 * scale)
#     t.left(90)
#     t.forward(X * scale)
# t.up()
# for x in range(-5, 50):  #x = координата по оси х
#   for y in range(-1, 30):  #y - координата по оси y
#     t.goto(x * scale, y * scale)
#     t.dot(2)
# t.done()
"""
Номер 8

Повтори 2 [Вперёд 3 Налево 90 Назад 5 Налево 90]
Поднять хвост
Назад 3
Направо 90
Вперед 2
Налево 90
Опустить хвост
Повтори 2 [Вперёд 7 Направо 90 Вперёд 4 Направо 90]
Определите, сколько точек с целочисленными координатами будут находиться внутри пересечения фигур, ограниченных заданными алгоритмом линиями, включая точки на границах этого пересечения.
"""
# import turtle as t
#
# t.tracer(0)
# t.screensize(3500, 3500, "white")
# t.left(90)
# t.speed(300)
# scale = 3
#for k in range(2):
  #t.forward(3 * scale)
  #t.left(90)
  #t.backward(5 * scale) 
  #t.left(90)
#t.up()
# for x in range(-5, 50):  #x = координата по оси х
#   for y in range(-1, 30):  #y - координата по оси y
#     t.goto(x * scale, y * scale)
#     t.dot(2)
# t.done()
"""
Номер 9

Повтори 5 [Налево 90 Повтори 6 [ Вперёд 12 Направо 90 Вперёд 5 Направо 270] Направо 270]
Определите, сколько точек с целочисленными координатами будут находиться внутри объединения фигур, ограниченных заданными алгоритмом линиями, не включая точки на границах этого объединения.
"""
# import turtle as t
#
# t.tracer(0)
# t.screensize(3500, 3500, "white")
# t.left(90)
# t.speed(300)
# scale = 3
# for k in range(6):
#   t.left(90)
#   t.forward(4)
# t.up()
# for x in range(-5, 50):  #x = координата по оси х
#   for y in range(-1, 30):  #y - координата по оси y
#     t.goto(x * scale, y * scale)
#     t.dot(2)
# t.done()
"""
Номер 10

Повтори 2 [Вперёд 5 Направо 90 Вперёд 10 Направо 90]
Поднять хвост
Вперёд 15
Направо 90
Опустить хвост
Повтори 2 [Вперёд 8 Направо 90 Вперёд 12 Направо 90]
Определите, сколько точек с целочисленными координатами будут находиться внутри объединения фигур, ограниченных заданными алгоритмом линиями, включая точки на границах этого объединения.
"""
# import turtle as t
#
# t.tracer(0)
# t.screensize(3500, 3500, "white")
# t.left(90)
# t.speed(300)
# scale = 3
# for k in range(6):
#   t.left(90)
#   t.forward(4)
# t.up()
# for x in range(-5, 50):  #x = координата по оси х
#   for y in range(-1, 30):  #y - координата по оси y
#     t.goto(x * scale, y * scale)
#     t.dot(2)
# t.done()

"""
Руслан составляет 5-буквенные коды из букв Р,У, С, Л, А, Н. Каждая допустимая гласная буква может входить в код не более одного раза. Сколько кодов может составить Руслан?
"""
#from itertools import *
#k = 0
#for x in product('РУСЛАН',repeat=5):
  #s = ''.join(x) #пере
  #if s.count('У')<=1 and s.count('А')<=1:
    #k+=1
#print(k)


